# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

#ROOT_DIR = .
ROOT_DIR = $(shell dirname $(realpath $(lastword $(MAKEFILE_LIST))))


# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = $(ROOT_DIR)/tests/gtest

# Where to find user code.
SRC_DIR = $(ROOT_DIR)/src
TEST_SRC_DIR = $(ROOT_DIR)/tests

# Flags passed to the preprocessor.
# Set Google Test's header directory as a system directory, such that
# the compiler doesn't generate warnings in Google Test headers.
CPPFLAGS += -isystem $(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -pthread -I$(SRC_DIR)

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = $(ROOT_DIR)/libresistance_tests

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(ROOT_DIR)/libresistance.so $(TESTS)

clean :
	@echo $(ROOT_DIR)
	rm -f $(TESTS) $(ROOT_DIR)/gtest.a $(ROOT_DIR)/gtest_main.a $(ROOT_DIR)/*.o $(ROOT_DIR)/*.so

test : all
	@echo "Running tests!"
	@$(ROOT_DIR)/libresistance_tests
	@echo "Tests done"

install: all
	@echo Installing to /usr/local
	cp $(ROOT_DIR)/libresistance.so /usr/local/lib
	cp $(SRC_DIR)/libresistance.h /usr/local/include/linum_lab6_resistance.h

uninstall:
	@echo Uninstalling...
	rm -f /usr/local/lib/libresistance.so /usr/local/include/linum_lab6_resistance.h

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
$(ROOT_DIR)/gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c -o $@ \
            $(GTEST_DIR)/src/gtest-all.cc

$(ROOT_DIR)/gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c -o $@\
            $(GTEST_DIR)/src/gtest_main.cc

$(ROOT_DIR)/gtest.a : $(ROOT_DIR)/gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

$(ROOT_DIR)/gtest_main.a : $(ROOT_DIR)/gtest-all.o $(ROOT_DIR)/gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds a sample test.  A test should link with either gtest.a or
# gtest_main.a, depending on whether it defines its own main()
# function.

$(ROOT_DIR)/libresistance.so : $(SRC_DIR)/libresistance.c $(SRC_DIR)/libresistance.h
	$(CC) -shared -fPIC $< -o $@

$(ROOT_DIR)/libresistance_tests.o : $(ROOT_DIR)/libresistance.so \
									$(TEST_SRC_DIR)/libresistance_tests.c \
									$(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c -o $@ $(TEST_SRC_DIR)/libresistance_tests.c

$(ROOT_DIR)/libresistance_tests : $(ROOT_DIR)/libresistance_tests.o $(ROOT_DIR)/gtest_main.a $(ROOT_DIR)/libresistance.so
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -Wl,-rpath,$(ROOT_DIR) -lpthread -o $@ $^
